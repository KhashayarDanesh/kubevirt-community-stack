---
apiVersion: v1
kind: Namespace
metadata:
  name: kubevirt
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: kubevirt-stack
  namespace: kubevirt
spec:
  chart: kubevirt-stack
  repo: https://cloudymax.github.io/kubevirt-community-stack
  version: v0.0.4
  targetNamespace: kubevirt
  valuesContent: |
    ################################################################################
    #   ___  _ __   ___ _ __ __ _| |_ ___  _ __
    #  / _ \| '_ \ / _ \ '__/ _` | __/ _ \| '__|
    # | (_) | |_) |  __/ | | (_| | || (_) | |
    #  \___/| .__/ \___|_|  \__,_|\__\___/|_|
    #       |_|
    ################################################################################
    operator:
      replicaCount: 1

      serviceAccount:
        create: true
        annotations: {}
        name: "kubevirt-operator"

      securityContext:
        privileged: true

      resources: {}

      nodeSelector: {}
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists

      monitorNamespace: "prometheus"
      prometheus:
        enabled: false
        serviceName: "prom-stack-kube-prometheus-prometheus"
        serviceNamesapce: "prometheus"

      permittedHostDevices:
        pciHostDevices:
        - pciVendorSelector: "10de:1e04"
          resourceName: "nvidia.com/TU102_GeForce_RTX2080Ti"
        mediatedDevices:
        - mdevNameSelector: "GRID RTX6000-4Q"
          resourceName: "nvidia.com/GRID_RTX6000-4Q"

      mediatedDevicesTypes:
        - nvidia-259

      useEmulation: false

      featureGates:
        - ExpandDisks
        - CPUManager
        - GPU
        - HostDevices
        - VMExport
        - HotplugVolumes
        - HostDisk
        - Macvtap
        - Passt
        - HotplugNICs
        - clientPassthrough
        - Snapshot
        - CPUNodeDiscovery

    ################################################################################
    #   ____ ____ ___
    #  / ___|  _ \_ _|
    # | |   | | | | |
    # | |___| |_| | |
    #  \____|____/___|
    ################################################################################
    cdi:
      replicaCount: 1

      serviceAccount:
        # Specifies whether a service account should be created
        create: true
        # Annotations to add to the service account
        annotations: {}
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname template
        name: "kubevirt-cdi-service-account"

      service:
        type: ClusterIP
        port: 8080
        name: metrics
        protocol: TCP

      uploadProxy:
        type: ClusterIP
        port: 443
        targetPort: 8443
        protocol: TCP

      ingress:
        enabled: false

      resources:
        requests:
          cpu: 10m
          memory: 150Mi

      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists

      affinity: {}

      cdi:
        featureGates:
        - HonorWaitForFirstConsumer
        resources:
          limits:
            cpu: "4"
            memory: 4Gi
          requests:
            cpu: "1"
            memory: 250Mi

    ################################################################################
    #  __  __
    # |  \/  | __ _ _ __   __ _  __ _  ___ _ __
    # | |\/| |/ _` | '_ \ / _` |/ _` |/ _ \ '__|
    # | |  | | (_| | | | | (_| | (_| |  __/ |
    # |_|  |_|\__,_|_| |_|\__,_|\__, |\___|_|
    ################################################################################
    manager:
      enabled: true
      replicaCount: 1
      service:
        type: ClusterIP
        port: 8080
        protocol: TCP
        name: http
      prometheus:
        enabled: false
        serviceName: "thanos-app-query-frontend"
        serviceNamespace: "monitoring"
      ingress:
        enabled: true
        className: "nginx"
        hostname: manager.buildstar.online
        annotations: {}
        tls:
          enabled: false

    ################################################################################
    #   ____ _           _                 _    ____ ___
    #  / ___| |_   _ ___| |_ ___ _ __     / \  |  _ \_ _|
    # | |   | | | | / __| __/ _ \ '__|   / _ \ | |_) | |
    # | |___| | |_| \__ \ ||  __/ |     / ___ \|  __/| |
    #  \____|_|\__,_|___/\__\___|_|    /_/   \_\_|  |___|
    #
    ################################################################################
    capi:
      enabled: true
      core: "cluster-api:v1.9.1"
      bootstrap: "kubeadm:v1.9.1"
      controlPlane: "kubeadm:v1.9.1"
      infrastructure: "kubevirt:v0.1.9"
      addon: "helm:v0.2.6"

      manager: {}
      #  featureGates:
      #    kubeadm:
      #      MachinePool: true
      #      KubeadmBootstrapFormatIgnition: true
      #    core:
      #      MachinePool: true
      #      KubeadmBootstrapFormatIgnition: true
      #    kubevirt:
      #      MachinePool: true
      #      KubeadmBootstrapFormatIgnition: true
      #    bootstrap:
      #      MachinePool: true
      #      KubeadmBootstrapFormatIgnition: true

      configSecret: {}

      replicaCount: 1

      image:
        manager:
          repository: registry.k8s.io/capi-operator/cluster-api-operator
          tag: v0.15.0
          pullPolicy: IfNotPresent

      env:
        manager: []

      imagePullSecrets: {}

      args:
        - --leader-elect

      resources: {}
      #  manager:
      #    limits:
      #      cpu: 100m
      #      memory: 150Mi
      #    requests:
      #      cpu: 100m
      #      memory: 100Mi

      containerSecurityContext: {}

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                      - ppc64le
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux

      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane

      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: capi-operator-webhook-service-cert

      volumeMounts:
        manager:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
