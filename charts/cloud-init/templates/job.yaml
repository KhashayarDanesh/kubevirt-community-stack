---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.hostname }}-cloud-init-job
  namespace: {{ .Values.namespace }}
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: cloud-init
      containers:
        - name: cloud-init
          image: {{ .Values.image }}
          env:
          - name: SECRET_NAME
            value: {{ .Values.secret_name }}
 	  {{- range $reg, $props := .Values.users }}
          {{- if $props.password.existingSecret }}
          - name: {{ upper $props.name }}_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ $props.password.existingSecret.name }}
                key: {{ $props.password.existingSecret.key }}
	  {{- end }}
          {{- if $props.password.random }}
          - name: {{ upper $props.name }}_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ $props.name }}-password
                key: password
	  {{- end }}
	  {{- end }}
          {{- if .Values.envsubst }}
          - name: ENVSUBST
            value: "true"
 	  {{- range $reg, $props := .Values.envsubst }}
          - name: {{ $props.var }}
            value: {{ $props.value }}
	  {{- end }}
          {{- end }}
          command: ["/bin/bash", "sleep 365d"]
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: userdata
              mountPath: /secrets/user-data.yaml
              subPath: user-data.yaml
            - name: optimizer-script
              mountPath: /optimize.sh
              subPath: optimize.sh
            {{- if .Values.wireguard }}
            {{- range $reg, $props := .Values.wireguard.interfaces }}
            - name: {{ $props.name }}
              mountPath: /secrets
              readOnly: true
            {{- end }}
            {{- end }}
      volumes:
        - name: userdata
          configMap:
            name: {{ .Values.hostname }}-userdata
        - name: optimizer-script
          configMap:
            name: optimizer-script
        {{- if .Values.wireguard }}
        {{- range $reg, $props := .Values.wireguard.interfaces }}
        - name: {{ $props.name }}
          secret:
            secretName: {{ $props.existingSecret.name }}
            items:
            - key: {{ $props.existingSecret.key }}
              path: {{ $props.name }}.conf
        {{- end }}
        {{- end }}
