{{ if not .Values.virtualMachinePool.enabled }}
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  generation: 1
  labels:
    kubevirt.io/os: linux
    metallb-service: {{ .Values.virtualMachine.name }}
  namespace: {{ .Values.virtualMachine.namespace }}
  name: {{ .Values.virtualMachine.name }}
spec:
  {{- if .Values.virtualMachine.machine.instancetype }}
  instancetype:
    name: {{ .Values.virtualMachine.machine.instancetype.name }}
    kind: {{ .Values.virtualMachine.machine.instancetype.kind }}
  {{- end }}
  runStrategy: {{ .Values.virtualMachine.runStrategy }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        kubevirt.io/domain: {{ .Values.virtualMachine.name }}
        kubevirt-service: {{ .Values.virtualMachine.name }}
        kubevirt-manager.io/managed: "true"
    spec:
      domain:
        features:
          {{- if .Values.virtualMachine.features.kvmEnabled -}}
          {{ "kvm: {}" | nindent 14 }}
          {{- end }}
          {{- if .Values.virtualMachine.features.acpiEnabled -}}
          {{ "acpi: {}" | nindent 14 }}
          {{- end }}
          {{- if .Values.virtualMachine.features.smmEnabled -}}
          {{ "smm:"  | nindent 14 -}}
          {{ "enabled: true"  | nindent 16 }}
          {{- end }}
        cpu:
          {{- if .Values.virtualMachine.machine.cpuPassthrough -}}
          {{ "model: host-passthrough" | nindent 14 }}
          {{- end }}
          {{- if not .Values.virtualMachine.machine.instancetype }}
          sockets: 1
          cores: {{ .Values.virtualMachine.machine.vCores -}}
          {{- if .Values.virtualMachine.machine.hyperThreadingEnabled -}}
          {{- "threads: 2" | nindent 14 -}}
          {{ else }}
          {{- "threads: 1" | nindent 14 -}}
          {{- end }}
          {{- end }}
        firmware:
        {{- if .Values.virtualMachine.features.efiEnabled }}
          bootloader:
            efi:
              secureBoot: {{ .Values.virtualMachine.features.secureBoot }}
        {{ else }}
          bootloader: {}
        {{- end }}
        devices:
          {{- with .Values.virtualMachine.interfaces }}
          interfaces:
          {{- toYaml . | nindent 14 }}
          {{- end }}
          {{- if not .Values.virtualMachine.machine.instancetype }}
          {{- with .Values.virtualMachine.gpus }}
          gpus:
          {{- toYaml . | nindent 14 }}
          {{- end }}
          {{- end }}
          autoattachPodInterface: {{ .Values.virtualMachine.features.autoattachPodInterface }}
          autoattachSerialConsole: {{ .Values.virtualMachine.features.autoattachSerialConsole }}
          autoattachGraphicsDevice: {{ .Values.virtualMachine.features.autoattachGraphicsDevice }}
          networkInterfaceMultiqueue: {{ .Values.virtualMachine.features.networkInterfaceMultiqueue }}
          inputs:
          - type: tablet
            bus: virtio
            name: tablet1
          disks:
            {{- range $reg, $props := .Values.disks }}
            {{- if ne "hostDisk" $props.type }}
            {{- if ne "configmap" $props.type }}
          - name: {{ $props.name }}
            {{ $props.type }}:
              bus: {{ $props.bus }}
              {{- if eq $props.readonly true }}
              readonly: {{ $props.readonly }}
              {{- end }}
            bootOrder: {{ $props.bootorder }}
            errorPolicy: {{ $.Values.diskErrorPolicy }}
            {{- end }}
            {{- end }}
            {{- if $props.configMap }}
          - name: {{ $props.name }}
            serial: {{ $props.serialNumber }}
            {{- end }}
            {{- end }}
        {{- if not .Values.virtualMachine.machine.instancetype }}
        resources:
          limits:
            memory: {{ .Values.virtualMachine.machine.memory }}
        {{- end }}
      {{- with .Values.virtualMachine.networks }}
      networks:
      {{- toYaml . | nindent 10 }}
      {{- end }}
      terminationGracePeriodSeconds: 0
      priorityClassName: {{ .Values.virtualMachine.machine.priorityClassName }}
      volumes:
        {{- range $reg, $props := .Values.disks }}
        {{- if ne "cloudinitvolume" $props.name }}
        {{- if ne "hostDisk" $props.type }}
        {{- if ne "configmap" $props.type }}
        {{- if not $props.ephemeral }}
        {{- if not $props.image }}
        - name: {{ $props.name }}
          persistentVolumeClaim:
            claimName: {{ $props.name }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if eq "configmap" $props.type }}
        - name: {{ $props.name }}
          configMap:
            name: {{ $props.configMap }}
        {{- end }}
        {{- if eq "hostDisk" $props.type }}
        - hostDisk:
            capacity: {{ $props.capacity }}
            path: {{ $props.path }}
            type: {{ $props.type }}
          name: {{ $props.name }}
        {{- end}}
        {{- if $props.image }}
        - containerDisk:
            image: {{ $props.image }}
          name: {{ $props.name }}
        {{- end }}
        {{- if $props.ephemeral }}
        - name: {{ $props.name }}
          ephemeral:
            persistentVolumeClaim:
              claimName: {{ $props.pvc }}
        {{- end }}
        {{- end }}
        {{- if eq .Values.cloudinit.enabled true }}
        - name: cloudinitvolume
          cloudInitNoCloud:
            secretRef:
              name: {{ .Values.cloudinit.secretName }}
        {{- end }}
{{- end }}
